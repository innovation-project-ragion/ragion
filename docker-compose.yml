# services:
#   # The main application service
#   app:
#     build: .
#     container_name: multimodal_rag_app
#     image: multimodal_rag_app
#     env_file:
#       - .env
#     ports:
#       - "8000:8000"
#       - "5678:5678"
#     volumes:
#       - .:/src
#     environment:
#       - MILVUS_HOST=${MILVUS_HOST}
#       - MILVUS_PORT=${MILVUS_PORT}
#       - NEO4J_HOST=${NEO4J_HOST}
#       - NEO4J_PORT=${NEO4J_PORT}
#     depends_on:
#       - standalone  # Milvus must be up for app to function
#       - neo4j       # Neo4j must be up
#       - ollama      # Ollama must be up
#     networks:
#       - milvus

#   # Open WebUI service
#   openwebui:
#     image: ghcr.io/open-webui/open-webui:ollama
#     container_name: open_webui
#     ports:
#       - "3000:8080"  # Expose the Open WebUI on port 3000
#     volumes:
#       - open-webui:/app/backend/data  # Persist data for Open WebUI
#       - ollama:/root/.ollama          # Persist Ollama data
#     restart: always
#     environment:
#       - OLLAMA_HOST=ollama  # Changed from 'localhost' to 'ollama' container name
#       - OLLAMA_PORT=11434  # Use the same port that Ollama exposes
#     depends_on:
#       - ollama  # Open WebUI depends on Ollama
#     networks:
#       - milvus

#   # Ollama LLM serving service
#   ollama:
#     image: ollama/ollama:latest
#     container_name: ollama
#     ports:
#       - "11434:11434"
#     volumes:
#       - ollama:/models  # Volume for persisting models in Ollama
#     entrypoint: ["ollama", "serve"]
#     environment:
#       - OLLAMA_HOST=ollama
#       - OLLAMA_PORT=11434
#     networks:
#       - milvus

#   # Milvus standalone service for vector database
#   standalone:
#     container_name: milvus-standalone
#     image: milvusdb/milvus:v2.4.9
#     command: ["milvus", "run", "standalone"]
#     environment:
#       - ETCD_ENDPOINTS=etcd:2379  # Communicate with etcd service
#       - MINIO_ADDRESS=minio:9000  # Communicate with MinIO for storage
#     volumes:
#       - milvus_data:/var/lib/milvus  # Persist Milvus data
#     ports:
#       - "19530:19530"  # Milvus API port
#     depends_on:
#       - etcd
#       - minio
#     networks:
#       - milvus

#   # etcd service for Milvus metadata
#   etcd:
#     container_name: milvus-etcd
#     image: quay.io/coreos/etcd:v3.5.0
#     environment:
#       - ETCD_AUTO_COMPACTION_MODE=revision
#       - ETCD_AUTO_COMPACTION_RETENTION=1000
#       - ETCD_QUOTA_BACKEND_BYTES=4294967296
#     volumes:
#       - etcd_data:/etcd  # Persist etcd data
#     command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#     networks:
#       - milvus

#   # MinIO service for Milvus storage
#   minio:
#     container_name: milvus-minio
#     image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#     environment:
#       - MINIO_ACCESS_KEY=minioadmin
#       - MINIO_SECRET_KEY=minioadmin
#     volumes:
#       - minio_data:/minio_data  # Persist MinIO data
#     command: minio server /minio_data
#     ports:
#       - "9000:9000"
#     networks:
#       - milvus

#   # Neo4j service for knowledge graph
#   neo4j:
#     image: neo4j:4.4.10
#     container_name: neo4j
#     ports:
#       - "7474:7474"  # Neo4j Browser
#       - "7687:7687"  # Neo4j Bolt protocol
#     environment:
#       - NEO4J_AUTH=${NEO4J_AUTH}  # Load Neo4j credentials from env file
#     volumes:
#       - neo4j_data:/data  # Persist Neo4j data
#     networks:
#       - milvus

# volumes:
#   milvus_data:  # Volume for Milvus data
#   minio_data:   # Volume for MinIO data
#   etcd_data:    # Volume for etcd data
#   neo4j_data:   # Volume for Neo4j data
#   open-webui:   # Volume for Open WebUI to store data
#   ollama:       # Volume for Ollama models

# networks:
#   milvus:
#     driver: bridge 
services:
  app:
    build: .
    container_name: multimodal_rag_app
    image: multimodal_rag_app
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - .:/src
    networks:
      - milvus
    depends_on:
      - ollama  # Ollama must be up

  openwebui:
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: open_webui
    ports:
      - "3000:8080"  # Expose the Open WebUI on port 3000
    volumes:
      - open-webui:/app/backend/data  # Persist data for Open WebUI
      - ollama:/root/.ollama          # Persist Ollama data
    restart: always
    environment:
      - OLLAMA_HOST=ollama  # Ensure OLLAMA_HOST is set to 'ollama' container name
      - OLLAMA_PORT=11434    # Use the correct port
      - ENABLE_USER_MANAGEMENT=false
      # - DEFAULT_ADMIN_EMAIL=admin@admin.com
      # - DEFAULT_ADMIN_PASSWORD=admin123
      # - USER_REGISTRATION_ENABLED=true
    depends_on:
      - ollama  # Open WebUI depends on Ollama
    networks:
      - milvus

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/models  # Volume for persisting models in Ollama
    entrypoint: ["ollama", "serve"]
    environment:
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
    networks:
      - milvus

volumes:
  open-webui:   # Volume for Open WebUI to store data
  ollama:       # Volume for Ollama models

networks:
  milvus:
    driver: bridge
